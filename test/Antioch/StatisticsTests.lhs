> module Antioch.StatisticsTests where

> import Antioch.DateTime
> import Antioch.Generators (genSessions, genPeriods)
> import Antioch.Statistics
> import Antioch.Types
> import Antioch.Weather
> import Antioch.Utilities
> import Antioch.Generators (generateTestData)
> import Test.HUnit
> import System.Random

> tests = TestList [
>     test_sessionDecFreq
>   , test_periodDecFreq
>   , test_sessionDecRA
>   , test_periodDecRA
>   , test_sessionRA
>   , test_periodRA
>   , test_sessionDec
>   , test_periodDec
>   , test_sessionFreq
>   , test_periodFreq
>   , test_sessionTP
>   , test_freqTime
>   , test_periodBand
>   , test_periodEfficiencyByBand
>   , test_decVsElevation
>   , test_efficiencyVsFrequency
>   , test_historicalFreq
>   , test_historicalDec
>   , test_historicalRA
>   , test_historicalTime
>   , test_historicalTime'
>   , test_historicalLST
>   , test_satisfactionRatio
>     ]

> test_sessionDecFreq = TestCase $ do
>     assertEqual "test_sessionDecFreq" expected (sessionDecFreq sessions)
>   where
>     (sessions, _) = generateTestData 100
>     expected = [(18.03244,0.35540175),(2.0,0.86953115),(2.0,-0.43333536),(13.329185,-0.5042104),(22.2,0.26451427),(5.8117433,0.5755827),(34.831585,-0.42235616),(2.0,1.2639091),(9.647265,0.9094225),(27.0602,-0.4722756),(34.159927,-6.634906e-2),(32.254818,0.8016582),(12.633172,-0.26538587),(2.0,-7.583574e-2),(27.28363,-0.16612746),(13.313569,0.6362873),(8.989425,-5.366988e-2),(12.533225,0.22575578),(2.0,1.3422121),(2.0,0.48313418),(2.0,1.3308609),(2.1804707,0.90698624),(13.148822,0.69169515),(2.0,-0.42456102),(2.0,0.74439865),(46.876442,0.21706207),(45.272423,0.4091615),(2.0,-0.16353345),(2.0,-0.3981369),(8.363153,0.728726),(3.9028223,-0.19722207),(38.153526,0.815735),(19.351812,-0.5189112),(2.0,0.8779256),(2.0,0.28787988),(24.259632,0.12819628),(2.0,-0.3348022),(5.643878,-0.4729126),(33.07285,0.83170295),(2.0,-0.3402991),(8.369127,-0.49558416),(2.0,-0.36616036),(22.2,-0.4360916),(9.3495655,-0.3121807),(22.2,0.7103386),(2.0,0.8860642),(48.359962,0.4034739),(2.0,-7.7951044e-2),(4.557304,-0.18023635),(45.903847,1.0972213),(5.726377,0.40689495),(26.562767,0.64996326),(22.71207,1.2578745),(2.0,0.37872204),(2.0,-0.5287638),(13.173273,1.0643686),(2.0,-0.21901698),(36.141354,0.7132361),(2.0,-2.1941112e-2),(8.283322,-0.46616343),(30.796986,-0.4876762),(46.121742,0.6190593),(2.0,0.6089755),(2.0,0.47053108),(2.0,0.22507824),(3.8919954,0.21205969),(2.0,-0.5583937),(12.842893,0.56587255),(2.0,0.43754724),(8.347389,-0.6013181),(43.295284,0.30221367),(2.0,0.78335196),(14.645904,0.13935386),(9.703919,-0.3767221),(22.2,0.7762683),(2.0,0.11946713),(2.0,1.0849653),(46.49578,0.99567944),(22.2,0.5504044),(42.9339,4.1787e-3),(9.160325,-0.1355085),(2.0,-4.722085e-2),(31.575743,0.36632052),(41.64395,1.0388851),(2.0,1.0890827),(2.0,0.761832),(40.69068,-0.14438012),(2.0,1.065994),(45.750862,-0.46304277),(2.0,0.797863),(35.298923,0.7117884),(40.77047,-6.90359e-2),(2.0,1.2930163),(35.33423,0.23172878),(2.0,0.8325746),(26.398733,-0.15187998),(2.0,-0.48570785),(4.442998,-0.40882537),(8.728631,-4.8734702e-2),(2.0,-0.46452308)]

> test_periodDecFreq = TestCase $ do
>     assertEqual "test_periodDecFreq" expected (periodDecFreq periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(40.421623,0.71786004),(4.2308164,0.31079882),(8.545437,1.0921531e-2),(29.43433,-0.33590412),(2.0,-0.5664609),(22.2,0.58460075),(2.0,0.16247611),(9.564482,0.17384861),(3.6233535,-4.1163653e-2),(42.254066,-0.46804252),(3.366477,-0.20966524),(2.0,1.3408189),(2.0,0.70830476),(2.0,0.96328914),(13.078968,0.6510907),(5.0934834,0.7730088),(45.92087,9.6083e-2),(13.252991,-0.16104063),(2.0,1.0019293),(2.0,0.41798505),(2.0,0.14028099),(22.2,-0.49074325),(2.0,0.34465548),(38.70217,8.557772e-2),(22.2,-0.10403472),(3.2661185,0.7344188),(37.20534,0.2673199),(2.0,4.5347665e-3),(4.90036,0.67110676),(44.334812,2.0602044e-2),(29.68108,0.39372504),(2.0,-0.22355025),(2.0,0.76811564),(2.0,-0.5936824),(5.34516,0.7190614),(42.155487,0.99284184),(2.0,0.41373706),(32.833515,-0.47098663),(2.0,0.24851698),(2.0,-0.2724586),(40.167473,5.4454107e-2),(37.422455,-0.15219945),(3.8554935,-9.398408e-2),(5.75789,-0.21717794),(36.23306,0.13855796),(2.0,-0.24361786),(12.526739,1.331989),(42.382786,-5.981459e-2),(48.33146,0.7580469),(2.0,-0.44819742),(2.510288,-0.5254717),(2.0,-8.24751e-2),(2.0,1.0328963),(2.0,0.19846912),(2.0,-0.4018265),(22.2,-0.39931932),(9.309816,0.16229875),(2.0,-0.20647888),(4.288614,0.22090739),(12.81987,0.118768565),(2.0,7.164891e-2),(2.0,0.5110966),(39.43843,0.8988093),(2.0,1.1263779),(3.8985143,-0.48555782),(22.2,3.7812363e-2),(2.0,-0.5022617),(2.553279,0.5957672),(2.0,-0.21518658),(9.334478,-0.31141174),(2.0,-0.5013595),(2.0,-0.5044929),(2.0,-0.50488067),(2.1527443,-0.27106953),(2.0,-0.16087933),(2.0,0.84631777),(9.359476,-0.28641945),(5.271047,0.16955304),(2.0,0.32024395),(40.1292,0.7332754),(2.0,-0.50693744),(47.41227,-0.4741024),(20.625532,-0.12579188),(2.0,1.217031),(2.0,-0.298634),(40.872032,1.2454491),(3.8807325,-0.45383805),(40.950226,-0.5072641),(33.46852,1.2552692),(2.0,-0.19833507),(2.0,-0.5027359),(2.3462698,-0.21913944),(2.0,8.752882e-2),(2.0,-0.4319322),(2.0,-0.3425423),(22.2,0.8171817),(2.0,1.1534888),(18.224922,-0.48187384),(22.2,0.80747753),(2.0,-1.6212023e-3)]

> test_sessionDecRA = TestCase $ do
>     assertEqual "test_sessionDecRA" expected (sessionDecRA sessions)
>   where
>     (sessions, _) = generateTestData 100
>     expected = [(3.5146692,0.35540175),(6.272734,0.86953115),(4.7924185,-0.43333536),(0.31415927,-0.5042104),(1.656012,0.26451427),(5.5875387,0.5755827),(3.9151483,-0.42235616),(0.10496616,1.2639091),(2.406517,0.9094225),(0.31415927,-0.4722756),(6.204291,-6.634906e-2),(1.4769788,0.8016582),(1.4691031,-0.26538587),(0.69443893,-7.583574e-2),(1.8812494,-0.16612746),(3.1999722,0.6362873),(4.114376,-5.366988e-2),(4.669128,0.22575578),(5.7770834,1.3422121),(5.630781,0.48313418),(0.45508456,1.3308609),(5.620281,0.90698624),(5.375042,0.69169515),(0.3745556,-0.42456102),(9.694958e-2,0.74439865),(4.447063,0.21706207),(5.74325,0.4091615),(0.18868923,-0.16353345),(1.091629,-0.3981369),(1.3202403,0.728726),(5.3051677,-0.19722207),(0.95931244,0.815735),(1.5078794,-0.5189112),(6.0446625,0.8779256),(4.813936,0.28787988),(2.8753853,0.12819628),(2.2521996,-0.3348022),(0.42970443,-0.4729126),(6.206192,0.83170295),(4.6928167,-0.3402991),(0.40900397,-0.49558416),(6.1260757,-0.36616036),(0.31213093,-0.4360916),(5.5096388e-2,-0.3121807),(3.6569364,0.7103386),(5.615141,0.8860642),(0.5773568,0.4034739),(0.1678276,-7.7951044e-2),(1.4307736,-0.18023635),(0.24639155,1.0972213),(1.5726085,0.40689495),(3.5984845,0.64996326),(1.0164914,1.2578745),(5.540741,0.37872204),(7.6449156e-2,-0.5287638),(0.61764574,1.0643686),(0.95137215,-0.21901698),(4.015748,0.7132361),(4.354246,-2.1941112e-2),(4.795723,-0.46616343),(6.2302446,-0.4876762),(5.3105083,0.6190593),(1.4298514,0.6089755),(1.3659346,0.47053108),(0.41037488,0.22507824),(2.632886,0.21205969),(2.5821407,-0.5583937),(1.4637771,0.56587255),(4.93745,0.43754724),(0.29202175,-0.6013181),(5.765997,0.30221367),(1.2597544,0.78335196),(2.366186,0.13935386),(2.2963638,-0.3767221),(3.414396,0.7762683),(1.3976744,0.11946713),(0.4688757,1.0849653),(6.0483932,0.99567944),(1.9507246,0.5504044),(3.830164,4.1787e-3),(4.899979,-0.1355085),(1.2022898,-4.722085e-2),(1.5973932,0.36632052),(5.1498747,1.0388851),(5.182978,1.0890827),(5.280258,0.761832),(4.4978266,-0.14438012),(4.3088264,1.065994),(2.0950346,-0.46304277),(3.099771,0.797863),(4.6001353,0.7117884),(4.3498516,-6.90359e-2),(4.6078887,1.2930163),(2.4400096,0.23172878),(2.658751,0.8325746),(4.6951504,-0.15187998),(0.31415927,-0.48570785),(0.74037623,-0.40882537),(3.2960079,-4.8734702e-2),(2.0548792,-0.46452308)]

> test_periodDecRA = TestCase $ do
>     assertEqual "test_periodDecRA" expected (periodDecRA periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(1.5845039,0.71786004),(1.3373058,0.31079882),(3.0735655,1.0921531e-2),(4.7569823,-0.33590412),(2.8445837,-0.5664609),(2.851239,0.58460075),(4.0560155,0.16247611),(2.4983556,0.17384861),(5.684717,-4.1163653e-2),(4.8297253,-0.46804252),(1.9044776,-0.20966524),(0.7131238,1.3408189),(5.740255,0.70830476),(4.450041,0.96328914),(1.3942012,0.6510907),(6.149561,0.7730088),(1.4990798,9.6083e-2),(4.853503,-0.16104063),(0.86571926,1.0019293),(1.5656618,0.41798505),(1.0039854,0.14028099),(5.5523396,-0.49074325),(6.2538395,0.34465548),(3.2015724,8.557772e-2),(1.8487573,-0.10403472),(5.3594193,0.7344188),(5.0776134,0.2673199),(3.1634383,4.5347665e-3),(5.0121384,0.67110676),(4.3354673,2.0602044e-2),(1.9347066,0.39372504),(0.2426703,-0.22355025),(4.1088376,0.76811564),(4.626664,-0.5936824),(5.901909,0.7190614),(4.4825096,0.99284184),(5.163734,0.41373706),(5.318948,-0.47098663),(3.182207,0.24851698),(5.9761715,-0.2724586),(4.96476,5.4454107e-2),(3.1207411,-0.15219945),(1.247071,-9.398408e-2),(4.619312,-0.21717794),(0.9920945,0.13855796),(5.5455265,-0.24361786),(4.0308867,1.331989),(5.732066,-5.981459e-2),(5.443262,0.7580469),(2.2751188,-0.44819742),(0.12214565,-0.5254717),(2.991103,-8.24751e-2),(0.7622929,1.0328963),(5.0400543,0.19846912),(1.6286376,-0.4018265),(3.4324067,-0.39931932),(1.7112465,0.16229875),(2.9126318,-0.20647888),(1.0338392,0.22090739),(4.998006,0.118768565),(4.97361,7.164891e-2),(5.2282615,0.5110966),(3.7246933,0.8988093),(4.9772644,1.1263779),(0.31415927,-0.48555782),(3.5802126,3.7812363e-2),(0.31415927,-0.5022617),(3.1139154,0.5957672),(0.9514668,-0.21518658),(0.9998293,-0.31141174),(0.31415927,-0.5013595),(0.31415927,-0.5044929),(0.31415927,-0.50488067),(4.0803885,-0.27106953),(1.8784775,-0.16087933),(6.1039915,0.84631777),(4.842538,-0.28641945),(3.8659618,0.16955304),(2.5262241,0.32024395),(3.1094172,0.7332754),(4.5249467,-0.50693744),(0.31415927,-0.4741024),(4.918848,-0.12579188),(1.351495,1.217031),(5.5981207,-0.298634),(3.8192623,1.2454491),(5.635933,-0.45383805),(0.10189557,-0.5072641),(3.0543249,1.2552692),(1.8983898,-0.19833507),(1.2863264,-0.5027359),(3.0701697,-0.21913944),(4.126009,8.752882e-2),(5.343114,-0.4319322),(3.3224957,-0.3425423),(5.5144086,0.8171817),(1.1700401,1.1534888),(0.31415927,-0.48187384),(1.0987556,0.80747753),(4.737526,-1.6212023e-3)]

> test_sessionRA = TestCase $ do
>     assertEqual "test_sessionRA" expected (sessionRA sessions)
>   where
>     (sessions, _) = generateTestData 100
>     expected = [(0.0,0.0),(1.0,7.0),(2.0,11.0),(3.0,4.0),(4.0,3.0),(5.0,3.0),(6.0,9.0),(7.0,3.0),(8.0,3.0),(9.0,3.0),(10.0,4.0),(11.0,3.0),(12.0,1.0),(13.0,2.0),(14.0,4.0),(15.0,2.0),(16.0,2.0),(17.0,4.0),(18.0,6.0),(19.0,5.0),(20.0,2.0),(21.0,4.0),(22.0,6.0),(23.0,2.0),(24.0,7.0)]

> test_periodRA = TestCase $ do
>     assertEqual "test_periodRA" expected (periodRA periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(0.0,0.0),(1.0,3.0),(2.0,7.0),(3.0,2.0),(4.0,6.0),(5.0,4.0),(6.0,5.0),(7.0,3.0),(8.0,5.0),(9.0,1.0),(10.0,2.0),(11.0,2.0),(12.0,8.0),(13.0,4.0),(14.0,2.0),(15.0,3.0),(16.0,5.0),(17.0,2.0),(18.0,4.0),(19.0,8.0),(20.0,7.0),(21.0,4.0),(22.0,8.0),(23.0,2.0),(24.0,3.0)]

> test_sessionDec = TestCase $ do
>     assertEqual "test_sessionDec" expected (sessionDec sessions)
>   where
>     (sessions, _) = generateTestData 100
>     expected = [(-40.0,0.0),(-39.0,0.0),(-38.0,0.0),(-37.0,0.0),(-36.0,0.0),(-35.0,0.0),(-34.0,1.0),(-33.0,0.0),(-32.0,0.0),(-31.0,1.0),(-30.0,1.0),(-29.0,1.0),(-28.0,2.0),(-27.0,4.0),(-26.0,3.0),(-25.0,0.0),(-24.0,4.0),(-23.0,1.0),(-22.0,1.0),(-21.0,1.0),(-20.0,1.0),(-19.0,2.0),(-18.0,0.0),(-17.0,1.0),(-16.0,0.0),(-15.0,1.0),(-14.0,0.0),(-13.0,0.0),(-12.0,1.0),(-11.0,1.0),(-10.0,1.0),(-9.0,2.0),(-8.0,2.0),(-7.0,1.0),(-6.0,0.0),(-5.0,0.0),(-4.0,2.0),(-3.0,3.0),(-2.0,2.0),(-1.0,1.0),(0.0,0.0),(1.0,1.0),(2.0,0.0),(3.0,0.0),(4.0,0.0),(5.0,0.0),(6.0,0.0),(7.0,1.0),(8.0,2.0),(9.0,0.0),(10.0,0.0),(11.0,0.0),(12.0,0.0),(13.0,4.0),(14.0,1.0),(15.0,0.0),(16.0,1.0),(17.0,1.0),(18.0,1.0),(19.0,0.0),(20.0,0.0),(21.0,2.0),(22.0,1.0),(23.0,0.0),(24.0,3.0),(25.0,0.0),(26.0,1.0),(27.0,1.0),(28.0,1.0),(29.0,0.0),(30.0,0.0),(31.0,0.0),(32.0,1.0),(33.0,2.0),(34.0,0.0),(35.0,1.0),(36.0,1.0),(37.0,1.0),(38.0,1.0),(39.0,0.0),(40.0,1.0),(41.0,3.0),(42.0,1.0),(43.0,1.0),(44.0,1.0),(45.0,2.0),(46.0,2.0),(47.0,1.0),(48.0,2.0),(49.0,0.0),(50.0,1.0),(51.0,2.0),(52.0,1.0),(53.0,1.0),(54.0,0.0),(55.0,0.0),(56.0,0.0),(57.0,0.0),(58.0,1.0),(59.0,0.0),(60.0,1.0),(61.0,1.0),(62.0,1.0),(63.0,3.0),(64.0,0.0),(65.0,0.0),(66.0,0.0),(67.0,0.0),(68.0,0.0),(69.0,0.0),(70.0,0.0),(71.0,0.0),(72.0,0.0),(73.0,2.0),(74.0,0.0),(75.0,1.0),(76.0,0.0),(77.0,2.0),(78.0,0.0),(79.0,0.0),(80.0,0.0),(81.0,0.0),(82.0,0.0),(83.0,0.0),(84.0,0.0),(85.0,0.0),(86.0,0.0),(87.0,0.0),(88.0,0.0),(89.0,0.0),(90.0,0.0)]

> test_periodDec = TestCase $ do
>     assertEqual "test_periodDec" expected (periodDec periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(-40.0,0.0),(-39.0,0.0),(-38.0,0.0),(-37.0,0.0),(-36.0,0.0),(-35.0,0.0),(-34.0,1.0),(-33.0,0.0),(-32.0,1.0),(-31.0,0.0),(-30.0,1.0),(-29.0,2.0),(-28.0,6.0),(-27.0,3.0),(-26.0,3.0),(-25.0,1.0),(-24.0,1.0),(-23.0,1.0),(-22.0,1.0),(-21.0,0.0),(-20.0,0.0),(-19.0,2.0),(-18.0,0.0),(-17.0,2.0),(-16.0,1.0),(-15.0,2.0),(-14.0,0.0),(-13.0,1.0),(-12.0,5.0),(-11.0,2.0),(-10.0,0.0),(-9.0,2.0),(-8.0,1.0),(-7.0,1.0),(-6.0,0.0),(-5.0,2.0),(-4.0,1.0),(-3.0,1.0),(-2.0,1.0),(-1.0,0.0),(0.0,1.0),(1.0,2.0),(2.0,1.0),(3.0,1.0),(4.0,1.0),(5.0,2.0),(6.0,2.0),(7.0,1.0),(8.0,1.0),(9.0,1.0),(10.0,4.0),(11.0,0.0),(12.0,1.0),(13.0,1.0),(14.0,0.0),(15.0,1.0),(16.0,1.0),(17.0,0.0),(18.0,1.0),(19.0,1.0),(20.0,1.0),(21.0,0.0),(22.0,0.0),(23.0,1.0),(24.0,2.0),(25.0,0.0),(26.0,0.0),(27.0,0.0),(28.0,0.0),(29.0,0.0),(30.0,1.0),(31.0,0.0),(32.0,0.0),(33.0,0.0),(34.0,1.0),(35.0,1.0),(36.0,0.0),(37.0,0.0),(38.0,1.0),(39.0,1.0),(40.0,0.0),(41.0,1.0),(42.0,2.0),(43.0,2.0),(44.0,1.0),(45.0,2.0),(46.0,0.0),(47.0,2.0),(48.0,0.0),(49.0,1.0),(50.0,0.0),(51.0,0.0),(52.0,1.0),(53.0,0.0),(54.0,0.0),(55.0,0.0),(56.0,1.0),(57.0,1.0),(58.0,1.0),(59.0,0.0),(60.0,1.0),(61.0,0.0),(62.0,0.0),(63.0,0.0),(64.0,0.0),(65.0,1.0),(66.0,0.0),(67.0,1.0),(68.0,0.0),(69.0,0.0),(70.0,1.0),(71.0,0.0),(72.0,2.0),(73.0,0.0),(74.0,0.0),(75.0,0.0),(76.0,0.0),(77.0,2.0),(78.0,0.0),(79.0,0.0),(80.0,0.0),(81.0,0.0),(82.0,0.0),(83.0,0.0),(84.0,0.0),(85.0,0.0),(86.0,0.0),(87.0,0.0),(88.0,0.0),(89.0,0.0),(90.0,0.0)]

> test_sessionFreq = TestCase $ do
>     assertEqual "test_sessionFreq" expected (sessionFreq sessions)
>   where
>     (sessions, _) = generateTestData 100
>     expected = [(1.0,0),(2.0,40785),(3.0,1185),(4.0,1455),(5.0,1890),(6.0,4200),(7.0,0),(8.0,0),(9.0,5280),(10.0,3000),(11.0,0),(12.0,0),(13.0,2670),(14.0,4125),(15.0,120),(16.0,0),(17.0,0),(18.0,0),(19.0,435),(20.0,1320),(21.0,0),(22.0,0),(23.0,6540),(24.0,0),(25.0,165),(26.0,0),(27.0,1995),(28.0,1245),(29.0,0),(30.0,0),(31.0,870),(32.0,1755),(33.0,390),(34.0,165),(35.0,2025),(36.0,3060),(37.0,1260),(38.0,0),(39.0,885),(40.0,0),(41.0,1785),(42.0,1620),(43.0,1380),(44.0,990),(45.0,0),(46.0,2565),(47.0,2640),(48.0,0),(49.0,690),(50.0,0)]

> test_periodFreq = TestCase $ do
>     assertEqual "test_periodFreq" expected (periodFreq periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(1.0,0),(2.0,13605),(3.0,1815),(4.0,1755),(5.0,1140),(6.0,1260),(7.0,0),(8.0,0),(9.0,465),(10.0,645),(11.0,0),(12.0,0),(13.0,690),(14.0,960),(15.0,0),(16.0,0),(17.0,0),(18.0,0),(19.0,150),(20.0,0),(21.0,600),(22.0,0),(23.0,2565),(24.0,0),(25.0,0),(26.0,0),(27.0,0),(28.0,0),(29.0,0),(30.0,885),(31.0,0),(32.0,0),(33.0,375),(34.0,150),(35.0,0),(36.0,0),(37.0,315),(38.0,540),(39.0,525),(40.0,600),(41.0,1560),(42.0,0),(43.0,630),(44.0,0),(45.0,150),(46.0,540),(47.0,0),(48.0,60),(49.0,120),(50.0,0)]

> test_sessionTP = TestCase $ do
>     assertEqual "test_sessionTP" expected (sessionTP periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(1,12),(2,13),(3,10),(4,10),(5,10),(6,10),(7,15)]

> test_freqTime = TestCase $ do
>     assertEqual "test_freqTime" expected (freqTime periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(1199145600,40.421623),(1199232000,4.2308164),(1199232000,8.545437),(1199145600,29.43433),(1199232000,2.0),(1199145600,22.2),(1199232000,2.0),(1199145600,9.564482),(1199145600,3.6233535),(1199145600,42.254066),(1199145600,3.366477),(1199232000,2.0),(1199232000,2.0),(1199232000,2.0),(1199145600,13.078968),(1199232000,5.0934834),(1199232000,45.92087),(1199232000,13.252991),(1199145600,2.0),(1199232000,2.0),(1199145600,2.0),(1199232000,22.2),(1199232000,2.0),(1199232000,38.70217),(1199232000,22.2),(1199232000,3.2661185),(1199145600,37.20534),(1199232000,2.0),(1199232000,4.90036),(1199232000,44.334812),(1199145600,29.68108),(1199232000,2.0),(1199232000,2.0),(1199145600,2.0),(1199232000,5.34516),(1199232000,42.155487),(1199145600,2.0),(1199232000,32.833515),(1199145600,2.0),(1199145600,2.0),(1199145600,40.167473),(1199232000,37.422455),(1199145600,3.8554935),(1199232000,5.75789),(1199232000,36.23306),(1199145600,2.0),(1199145600,12.526739),(1199145600,42.382786),(1199145600,48.33146),(1199145600,2.0),(1199232000,2.510288),(1199145600,2.0),(1199145600,2.0),(1199232000,2.0),(1199145600,2.0),(1199232000,22.2),(1199232000,9.309816),(1199145600,2.0),(1199145600,4.288614),(1199145600,12.81987),(1199145600,2.0),(1199232000,2.0),(1199145600,39.43843),(1199145600,2.0),(1199232000,3.8985143),(1199145600,22.2),(1199145600,2.0),(1199145600,2.553279),(1199232000,2.0),(1199232000,9.334478),(1199145600,2.0),(1199232000,2.0),(1199232000,2.0),(1199145600,2.1527443),(1199232000,2.0),(1199232000,2.0),(1199145600,9.359476),(1199145600,5.271047),(1199145600,2.0),(1199145600,40.1292),(1199232000,2.0),(1199145600,47.41227),(1199232000,20.625532),(1199232000,2.0),(1199232000,2.0),(1199232000,40.872032),(1199232000,3.8807325),(1199232000,40.950226),(1199145600,33.46852),(1199232000,2.0),(1199145600,2.0),(1199145600,2.3462698),(1199232000,2.0),(1199232000,2.0),(1199232000,2.0),(1199232000,22.2),(1199145600,2.0),(1199232000,18.224922),(1199145600,22.2),(1199145600,2.0)]

> test_periodBand = TestCase $ do
>     assertEqual "test_periodBand" expected (periodBand periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(L,13605),(S,3570),(C,2400),(X,1110),(U,1650),(K,3315),(A,3390),(Q,3060)]

> test_periodEfficiencyByBand = TestCase $ do
>     assertEqual "test_periodEfficiencyByBand" expected (periodEfficiencyByBand periods $ getEfficiencies $ length periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(L,12.25091),(S,3.3140855),(C,2.1376348),(X,1.0520351),(U,1.0382895),(K,3.9982724),(A,1.5661592),(Q,4.667811)]

> test_decVsElevation = TestCase $ do
>     assertEqual "test_decVsElevation" expected (decVsElevation periods $ getEfficiencies $ length periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [(57.631077,0.71786004),(-5.355072e-2,-0.2724586),(-43.35321,-0.21717794),(7.860901,-5.981459e-2),(-58.509445,-0.12579188),(1.2352753,-0.45383805),(17.31845,-0.5027359),(-57.584106,-0.3425423),(73.801414,0.80747753)]

> test_efficiencyVsFrequency = TestCase $ do
>     assertEqual "test_efficiencyVsFreq" expected (efficiencyVsFrequency sessions $ getEfficiencies $ length sessions)
>   where
>     (sessions, _) = generateTestData 100
>     expected = [(18.03244,0.98727703),(2.0,0.35925463),(2.0,0.23123395),(13.329185,0.10321328),(22.2,0.4751926),(5.8117433,0.34717193),(34.831585,0.21915126),(2.0,9.1130584e-2),(9.647265,0.4631099),(27.0602,0.33508924),(34.159927,0.20706856),(32.254818,7.904789e-2),(12.633172,0.4510272),(2.0,0.32300654),(27.28363,0.19498587),(13.313569,6.696519e-2),(8.989425,0.43894452),(12.533225,0.31092384),(2.0,0.18290317),(2.0,5.4882497e-2),(2.0,0.42686182),(2.1804707,0.29884115),(13.148822,0.17082047),(2.0,4.279983e-2),(2.0,0.41477913),(46.876442,0.28675845),(45.272423,0.15873778),(2.0,3.0717134e-2),(2.0,0.40269643),(8.363153,0.2746758),(3.9028223,0.14665508),(38.153526,1.8634439e-2),(19.351812,0.39061373),(2.0,0.2625931),(2.0,0.13457239),(24.259632,6.5517426e-3),(2.0,0.37853104),(5.643878,0.2505104),(33.07285,0.12248972),(2.0,0.99446905),(8.369127,0.36644834),(2.0,0.23842767),(22.2,0.110407025),(9.3495655,0.98238635),(22.2,0.35436565),(2.0,0.22634497),(48.359962,9.832433e-2),(2.0,0.97030365),(4.557304,0.34228295),(45.903847,0.2142623),(5.726377,8.624163e-2),(26.562767,0.45822093),(22.71207,0.33020025),(2.0,0.20217961),(2.0,7.415894e-2),(13.173273,0.44613823),(2.0,0.31811756),(36.141354,0.19009691),(2.0,6.207624e-2),(8.283322,0.43405554),(30.796986,0.30603486),(46.121742,0.17801422),(2.0,4.9993545e-2),(2.0,0.42197287),(2.0,0.29395217),(3.8919954,0.16593152),(2.0,3.791085e-2),(12.842893,0.40989017),(2.0,0.28186947),(8.347389,0.15384883),(43.295284,2.5828153e-2),(2.0,0.39780748),(14.645904,0.26978678),(9.703919,0.14176613),(22.2,1.3745457e-2),(2.0,0.38572478),(2.0,0.25770408),(46.49578,0.12968343),(22.2,1.662761e-3),(42.9339,0.3736421),(9.160325,0.24562141),(2.0,0.11760074),(31.575743,0.98958004),(41.64395,0.3615594),(2.0,0.23353872),(2.0,0.10551804),(40.69068,0.97749734),(2.0,0.3494767),(45.750862,0.22145602),(2.0,9.343535e-2),(35.298923,0.96541464),(40.77047,0.337394),(2.0,0.20937333),(35.33423,8.135265e-2),(2.0,0.95333195),(26.398733,0.3253113),(2.0,0.19729063),(4.442998,6.9269955e-2),(8.728631,0.94124925),(2.0,0.3132286)]

> test_historicalFreq = TestCase $ do
>     assertEqual "test_historicalFreq" expected (historicalFreq periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [40.421623,4.2308164,8.545437,29.43433,2.0,22.2,2.0,9.564482,3.6233535,42.254066,3.366477,2.0,2.0,2.0,13.078968,5.0934834,45.92087,13.252991,2.0,2.0,2.0,22.2,2.0,38.70217,22.2,3.2661185,37.20534,2.0,4.90036,44.334812,29.68108,2.0,2.0,2.0,5.34516,42.155487,2.0,32.833515,2.0,2.0,40.167473,37.422455,3.8554935,5.75789,36.23306,2.0,12.526739,42.382786,48.33146,2.0,2.510288,2.0,2.0,2.0,2.0,22.2,9.309816,2.0,4.288614,12.81987,2.0,2.0,39.43843,2.0,3.8985143,22.2,2.0,2.553279,2.0,9.334478,2.0,2.0,2.0,2.1527443,2.0,2.0,9.359476,5.271047,2.0,40.1292,2.0,47.41227,20.625532,2.0,2.0,40.872032,3.8807325,40.950226,33.46852,2.0,2.0,2.3462698,2.0,2.0,2.0,22.2,2.0,18.224922,22.2,2.0]

> test_historicalDec = TestCase $ do
>     assertEqual "test_historicalDec" expected (historicalDec periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [0.71786004,0.31079882,1.0921531e-2,-0.33590412,-0.5664609,0.58460075,0.16247611,0.17384861,-4.1163653e-2,-0.46804252,-0.20966524,1.3408189,0.70830476,0.96328914,0.6510907,0.7730088,9.6083e-2,-0.16104063,1.0019293,0.41798505,0.14028099,-0.49074325,0.34465548,8.557772e-2,-0.10403472,0.7344188,0.2673199,4.5347665e-3,0.67110676,2.0602044e-2,0.39372504,-0.22355025,0.76811564,-0.5936824,0.7190614,0.99284184,0.41373706,-0.47098663,0.24851698,-0.2724586,5.4454107e-2,-0.15219945,-9.398408e-2,-0.21717794,0.13855796,-0.24361786,1.331989,-5.981459e-2,0.7580469,-0.44819742,-0.5254717,-8.24751e-2,1.0328963,0.19846912,-0.4018265,-0.39931932,0.16229875,-0.20647888,0.22090739,0.118768565,7.164891e-2,0.5110966,0.8988093,1.1263779,-0.48555782,3.7812363e-2,-0.5022617,0.5957672,-0.21518658,-0.31141174,-0.5013595,-0.5044929,-0.50488067,-0.27106953,-0.16087933,0.84631777,-0.28641945,0.16955304,0.32024395,0.7332754,-0.50693744,-0.4741024,-0.12579188,1.217031,-0.298634,1.2454491,-0.45383805,-0.5072641,1.2552692,-0.19833507,-0.5027359,-0.21913944,8.752882e-2,-0.4319322,-0.3425423,0.8171817,1.1534888,-0.48187384,0.80747753,-1.6212023e-3]

> test_historicalRA = TestCase $ do
>     assertEqual "test_historicalRA" expected (historicalRA periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [1.5845039,1.3373058,3.0735655,4.7569823,2.8445837,2.851239,4.0560155,2.4983556,5.684717,4.8297253,1.9044776,0.7131238,5.740255,4.450041,1.3942012,6.149561,1.4990798,4.853503,0.86571926,1.5656618,1.0039854,5.5523396,6.2538395,3.2015724,1.8487573,5.3594193,5.0776134,3.1634383,5.0121384,4.3354673,1.9347066,0.2426703,4.1088376,4.626664,5.901909,4.4825096,5.163734,5.318948,3.182207,5.9761715,4.96476,3.1207411,1.247071,4.619312,0.9920945,5.5455265,4.0308867,5.732066,5.443262,2.2751188,0.12214565,2.991103,0.7622929,5.0400543,1.6286376,3.4324067,1.7112465,2.9126318,1.0338392,4.998006,4.97361,5.2282615,3.7246933,4.9772644,0.31415927,3.5802126,0.31415927,3.1139154,0.9514668,0.9998293,0.31415927,0.31415927,0.31415927,4.0803885,1.8784775,6.1039915,4.842538,3.8659618,2.5262241,3.1094172,4.5249467,0.31415927,4.918848,1.351495,5.5981207,3.8192623,5.635933,0.10189557,3.0543249,1.8983898,1.2863264,3.0701697,4.126009,5.343114,3.3224957,5.5144086,1.1700401,0.31415927,1.0987556,4.737526]

> test_historicalTime = TestCase $ do
>     assertEqual "test_historicalTime" expected (historicalTime periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [1199145600,1199232000,1199232000,1199145600,1199232000,1199145600,1199232000,1199145600,1199145600,1199145600,1199145600,1199232000,1199232000,1199232000,1199145600,1199232000,1199232000,1199232000,1199145600,1199232000,1199145600,1199232000,1199232000,1199232000,1199232000,1199232000,1199145600,1199232000,1199232000,1199232000,1199145600,1199232000,1199232000,1199145600,1199232000,1199232000,1199145600,1199232000,1199145600,1199145600,1199145600,1199232000,1199145600,1199232000,1199232000,1199145600,1199145600,1199145600,1199145600,1199145600,1199232000,1199145600,1199145600,1199232000,1199145600,1199232000,1199232000,1199145600,1199145600,1199145600,1199145600,1199232000,1199145600,1199145600,1199232000,1199145600,1199145600,1199145600,1199232000,1199232000,1199145600,1199232000,1199232000,1199145600,1199232000,1199232000,1199145600,1199145600,1199145600,1199145600,1199232000,1199145600,1199232000,1199232000,1199232000,1199232000,1199232000,1199232000,1199145600,1199232000,1199145600,1199145600,1199232000,1199232000,1199232000,1199232000,1199145600,1199232000,1199145600,1199145600]

> test_historicalTime' = TestCase $ do
>     assertEqual "test_historicalTime'" expected (historicalTime' periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]

> test_historicalLST = TestCase $ do
>     assertEqual "test_historicalLST" expected (historicalLST periods)
>   where
>     (_, periods) = generateTestData 100
>     expected = [195.2261,195.85587,197.26595,197.10623,197.26595,195.2261,197.17194,194.56805,196.44818,194.66205,194.66205,196.88991,196.1379,195.3858,197.85829,196.32588,197.92401,196.88991,194.47406,197.07793,196.7302,198.3,195.00978,197.82999,193.97572,198.48805,197.01222,197.82999,196.1379,194.63377,197.01222,195.85587,193.97572,195.3201,195.10379,195.57382,197.9523,196.51389,195.5081,195.97813,194.94408,194.25775,195.97813,194.72777,196.04387,194.66205,195.79012,195.03807,194.28604,197.01222,195.29181,195.60211,197.20024,197.54799,194.19203,196.79591,196.41989,197.85829,197.7643,196.54219,197.9523,195.57382,198.42232,197.48225,195.3858,195.97813,197.7643,198.42232,194.16373,193.97572,196.44818,193.97572,194.63377,197.85829,196.60791,194.53976,193.816,197.85829,196.26018,196.35417,193.97572,193.816,198.48805,194.16373,195.00978,197.736,193.88168,195.66783,194.56805,195.3858,194.94408,197.10623,196.88991,195.10379,194.72777,197.26595,196.44818,194.63377,197.48225,197.01222]

> test_satisfactionRatio = TestCase $ do
>     assertEqual "test_satisfactionRatio" expected (satisfactionRatio sessions periods)
>   where
>     (sessions, periods) = generateTestData 100
>     expected = []

Test utilities

> getEfficiencies    :: Int -> [Float]
> getEfficiencies n =
>     [fst $ randomR (0.0, 1.0) $ mkStdGen i | i <- [0 .. n]]

> assertAlmostEqual :: String -> Int -> Float -> Float -> IO ()
> assertAlmostEqual name places expected value =
>     assertBool name $ abs (value - expected) < epsilon
>   where
>     epsilon = 1.0 / 10.0 ** fromIntegral places

